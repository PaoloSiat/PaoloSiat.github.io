{"version":3,"sources":["components/aboutMe.tsx","components/contact.tsx","utility/utility.ts","components/footer.tsx","components/header.tsx","components/navigationBar.tsx","components/fullscreenImage.tsx","components/portfolio.tsx","components/workExperience.tsx","index.tsx"],"names":["AboutMe","props","state","aboutMeText","fetch","siteData","siteInformation","aboutMeTextFile","then","data","text","setState","id","className","this","siteStructure","aboutMeTitle","Component","Contact","status","submitForm","bind","event","preventDefault","form","target","FormData","xhr","XMLHttpRequest","open","method","action","setRequestHeader","onreadystatechange","readyState","DONE","reset","send","contactInformationTitle","contactFullName","contactJobTitle","contactPhone","contactEmail","href","socialInstagramLink","rel","socialYoutubeLink","contactFormTitle","onSubmit","title","type","name","tabIndex","value","contactFormSubmitText","scrollToContentChild","childElementName","contentElement","document","getElementById","childElement","y","getBoundingClientRect","top","navigationBarElement","navigationBarHeight","height","body","scrollBy","left","Math","round","behavior","Footer","copyrightMessage","onClick","x","scrollTo","backToTopText","Header","headerName","headerJobTitle","NavigationBar","window","addEventListener","onResize","navigationElement","width","style","display","toggleVerticalNavigation","navigationAboutMeTitle","navigationPortfolioTitle","navigationWorkExperienceTitle","navigationContactTitle","FullscreenImage","parent","currentFullscreenImage","Image","src","alt","fluid","draggable","Portfolio","imagePath","category","result","images","portfolioCategories","categoryData","image","path","push","key","openFullscreenImage","element","visible","forceUpdate","portfolioElements","getImagesFromCategory","portfolioTitle","WorkExperience","content","file","a","trim","response","loadFile","workExperienceFile","workExperienceContent","toggleWorkExperience","workExperienceTitle","ReactDOM","render","basename","process","JSON","parse","Index","siteRawData"],"mappings":"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","file":"static/js/main.b0bf0181.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\n\r\n// The data that the Portfolio class manages.\r\ninterface AboutMeProps {\r\n  siteData: ISiteData;\r\n}\r\ninterface AboutMeState {\r\n  aboutMeText: string;\r\n}\r\n\r\n// Rendering is done in HTML and returns what this class what actually look like on the screen.\r\nexport default class AboutMe extends Component<AboutMeProps, AboutMeState> {\r\n  constructor (props: AboutMeProps) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      aboutMeText: ''\r\n    }\r\n\r\n    // Grab the text content of the file and parse it in to a class variable.\r\n    fetch(this.props.siteData.siteInformation.aboutMeTextFile)\r\n    .then(data => data.text())\r\n    .then(text => { this.setState({ aboutMeText: text }); });\r\n  }\r\n\r\n  render(): JSX.Element {\r\n    return (\r\n      <div id='about-me'>\r\n        <h1 className='unselectable'>{this.props.siteData.siteStructure.aboutMeTitle}</h1>\r\n        <p>{this.state.aboutMeText}</p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\n\r\n\r\n// The data that the Contact class manages.\r\ninterface ContactProps {\r\n  siteData: ISiteData;\r\n}\r\ninterface ContactState {\r\n  status: string;\r\n}\r\n\r\nexport default class Contact extends Component<ContactProps, ContactState> {\r\n  // This function runs when the class is created.\r\n  constructor(props: ContactProps) {\r\n    super(props);\r\n\r\n    // Set default data.\r\n    this.state = {\r\n      status: ''\r\n    };\r\n\r\n    // Bind the submit form event to the submit form function.\r\n    this.submitForm = this.submitForm.bind(this);\r\n  }\r\n\r\n  submitForm(event: any): void {\r\n    // Process and send the data submitted to the website that sends the email.\r\n    event.preventDefault();\r\n    const form = event.target;\r\n    const data = new FormData(form);\r\n    const xhr = new XMLHttpRequest();\r\n    xhr.open(form.method, form.action);\r\n    xhr.setRequestHeader(\"Accept\", \"application/json\");\r\n    xhr.onreadystatechange = () => {\r\n      if (xhr.readyState !== XMLHttpRequest.DONE) return;\r\n      if (xhr.status === 200) {\r\n        form.reset();\r\n        this.setState({ status: \"SUCCESS\" });\r\n      } else {\r\n        this.setState({ status: \"ERROR\" });\r\n      }\r\n    };\r\n    xhr.send(data);\r\n  }\r\n\r\n  // Rendering is done in HTML and returns what this class what actually look like on the screen.\r\n  render(): JSX.Element {\r\n    return (\r\n      <div id='contact'>\r\n        <div id='contact-information'>\r\n          <h1>{this.props.siteData.siteStructure.contactInformationTitle}</h1>\r\n          <p><strong>{this.props.siteData.siteInformation.contactFullName}</strong><br />{this.props.siteData.siteInformation.contactJobTitle}<br />\r\n            Phone: <span className='dark'>{this.props.siteData.siteInformation.contactPhone}</span><br />\r\n            E-mail: <span className='dark'>{this.props.siteData.siteInformation.contactEmail}</span></p>\r\n          <div id='social-media-icons'>\r\n            <a href={this.props.siteData.siteInformation.socialInstagramLink} className='fa-layers fa-2x'rel='noopener noreferrer' target='_blank'>\r\n\t\t\t\t\t\t\t<i className='fab fa-instagram'></i>\r\n\t\t\t\t\t\t</a>\r\n            <a href={this.props.siteData.siteInformation.socialYoutubeLink} className='fa-layers fa-2x' rel='noopener noreferrer' target='_blank'>\r\n\t\t\t\t\t\t\t<i className=\"fab fa-youtube\"></i>\r\n\t\t\t\t\t\t</a>\r\n          </div>\r\n        </div>\r\n        <div id='contact-form'>\r\n          <h1 className='unselectable'>{this.props.siteData.siteStructure.contactFormTitle}</h1>\r\n          <form onSubmit={this.submitForm} action=\"https://formspree.io/mdowbkwd\" method=\"POST\">\r\n            <label>\r\n            <p className='unselectable'>Name:<abbr title='required' className='red'>* </abbr></p>\r\n              <input type='text' id='form-name' name='form-name' tabIndex={1} />\r\n            </label>\r\n            <label>\r\n              <p className='unselectable'>E-mail:<abbr title='required' className='red'>* </abbr></p>\r\n              <input type='email' id='form-email' name='form-email' tabIndex={2} />\r\n            </label>\r\n            <label>\r\n              <p className='unselectable'>Message:<abbr title='required' className='red'>* </abbr></p>\r\n              <textarea id='form-message' name='form-message' tabIndex={3} />\r\n            </label>\r\n            {this.state.status === \"SUCCESS\" ? <p className='dark'><strong>Thanks!</strong></p> : <input type='submit' id='form-submit' name='form-submit' value={this.props.siteData.siteStructure.contactFormSubmitText} tabIndex={4} />}\r\n            {this.state.status === \"ERROR\" && <p className='red'><strong>Ooops! There was an error.</strong></p>}\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","// Scrolls the screen to the location specified\r\nexport const scrollToContentLocation = (x: number, y: number): void => {\r\n  let contentElement = document.getElementById('content');\r\n\r\n  if (contentElement) document.body.scrollTo({ left: x, top: y, behavior: 'smooth' });\r\n}\r\n\r\n// Scrolls the screen to the location that a specific HTML element is at.\r\nexport const scrollToContentChild = (childElementName: string): void => {\r\n  let contentElement = document.getElementById('content');\r\n  let childElement = document.getElementById(childElementName);\r\n  let y = childElement ? childElement.getBoundingClientRect().top : 0;\r\n  let navigationBarElement = document.getElementById('navigation-bar');\r\n  let navigationBarHeight = navigationBarElement ? navigationBarElement.getBoundingClientRect().height : 0;\r\n\r\n  if (contentElement) document.body.scrollBy({ left: 0, top: Math.round((y - navigationBarHeight)), behavior: 'smooth' });\r\n}\r\n","import React, { Component } from 'react';\r\nimport { scrollToContentLocation } from '../utility';\r\n\r\n\r\n// The data that the Contact class manages.\r\ninterface FooterProps {\r\n  siteData: ISiteData;\r\n}\r\ninterface FooterState {}\r\n\r\nexport default class Footer extends Component<FooterProps, FooterState> {\r\n  // Rendering is done in HTML and returns what this class what actually look like on the screen.\r\n  render(): JSX.Element {\r\n    return (\r\n      <div id='footer' className='unselectable'>\r\n        <div>\r\n          <div>{this.props.siteData.siteInformation.copyrightMessage}</div>\r\n          <div id='back-to-top' onClick={() => scrollToContentLocation(0, 0)}>▲ {this.props.siteData.siteStructure.backToTopText}</div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\n\r\n\r\n// The data that the Contact class manages.\r\ninterface HeaderProps {\r\n  siteData: ISiteData;\r\n}\r\ninterface HeaderState {}\r\n\r\nexport default class Header extends Component<HeaderProps, HeaderState> {\r\n   // Rendering is done in HTML and returns what this class what actually look like on the screen.\r\n  render(): JSX.Element {\r\n    return (\r\n      <div id='header'>\r\n        <div id='header-name' className='unselectable'>\r\n          <h1>{this.props.siteData.siteInformation.headerName}</h1>\r\n          <h2>{this.props.siteData.siteInformation.headerJobTitle}</h2>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { scrollToContentChild } from '../utility';\r\n\r\n\r\n// The data that the Contact class manages.\r\ninterface NavigationBarProps {\r\n  siteData: ISiteData;\r\n}\r\ninterface NavigationBarState {}\r\n\r\nexport default class NavigationBar extends Component<NavigationBarProps, NavigationBarState> {\r\n  // This function runs when the class is created.\r\n  constructor(props: NavigationBarProps) {\r\n    super(props);\r\n\r\n    // Bind the onResize function to the event that triggers every time the windows resizes.\r\n    window.addEventListener('resize', this.onResize);\r\n  }\r\n\r\n  onResize(): void {\r\n    // If the window is wider than 576 pixels then hide the vertical navigation menu.\r\n    let navigationElement = document.getElementById('navigation-vertical');\r\n\r\n    if (navigationElement && document.body.getBoundingClientRect().width >= 576) navigationElement.style.display = 'none';\r\n  }\r\n\r\n  toggleVerticalNavigation(): void {\r\n    // Toggle the visibility of the vertical navigation menu.\r\n    let navigationElement = document.getElementById('navigation-vertical');\r\n\r\n    if (navigationElement && navigationElement.style.display !== 'flex') navigationElement.style.display = 'flex';\r\n    else if (navigationElement) navigationElement.style.display = 'none';\r\n  }\r\n\r\n   // Rendering is done in HTML and returns what this class what actually look like on the screen.\r\n  render(): JSX.Element {\r\n    return (\r\n      <div id='navigation-bar' className='unselectable'>\r\n        <div id='navigation-toggle' onClick={() => this.toggleVerticalNavigation()}>≡</div>\r\n        <div id='navigation-horizontal'>\r\n          <div onClick={() => scrollToContentChild('about-me')}>{this.props.siteData.siteStructure.navigationAboutMeTitle}</div>\r\n          <div onClick={() => scrollToContentChild('portfolio')}>{this.props.siteData.siteStructure.navigationPortfolioTitle}</div>\r\n          <div onClick={() => scrollToContentChild('work-experience')}>{this.props.siteData.siteStructure.navigationWorkExperienceTitle}</div>\r\n          <div onClick={() => scrollToContentChild('contact')}>{this.props.siteData.siteStructure.navigationContactTitle}</div>\r\n        </div>\r\n        <div id='navigation-vertical' style={{ display: 'none' }}>\r\n          <div onClick={() => scrollToContentChild('about-me')}>{this.props.siteData.siteStructure.navigationAboutMeTitle}</div>\r\n          <div onClick={() => scrollToContentChild('portfolio')}>{this.props.siteData.siteStructure.navigationPortfolioTitle}</div>\r\n          <div onClick={() => scrollToContentChild('work-experience')}>{this.props.siteData.siteStructure.navigationWorkExperienceTitle}</div>\r\n          <div onClick={() => scrollToContentChild('contact')}>{this.props.siteData.siteStructure.navigationContactTitle}</div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Image } from 'semantic-ui-react';\r\nimport Portfolio from './portfolio';\r\n\r\n\r\ninterface IFullscreenImageProps {\r\n  parent: Portfolio;\r\n}\r\ninterface IFullscreenImageState {}\r\n\r\n\r\nexport default class FullscreenImage extends Component<IFullscreenImageProps, IFullscreenImageState> {\r\n  render(): JSX.Element {\r\n    return(\r\n      <div id='fullscreen-image' onClick={() => {this.props.parent.setState({ currentFullscreenImage: '' })}} style={{ display: this.props.parent.state.currentFullscreenImage !== '' ? 'flex' : 'none' }}>\r\n        <div id='fullscreen-close'>×</div>\r\n        <Image src={this.props.parent.state.currentFullscreenImage} alt={`fullscreen portfolio image for: ${this.props.parent.state.currentFullscreenImage}`} fluid={true} draggable={false} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Image } from 'semantic-ui-react';\r\nimport FullscreenImage from './fullscreenImage';\r\n\r\n\r\n// The data that the Portfolio class manages.\r\ninterface PortfolioProps {\r\n  siteData: ISiteData;\r\n}\r\ninterface PortfolioState {\r\n  currentFullscreenImage: string;\r\n}\r\n\r\nexport default class Portfolio extends Component<PortfolioProps, PortfolioState> {\r\n  // This function runs when the class is created.\r\n  constructor(props: PortfolioProps) {\r\n    super(props);\r\n\r\n    // Set default data.\r\n    this.state = {\r\n      currentFullscreenImage: ''\r\n    }\r\n  }\r\n\r\n  // Creates a full screen image element that shows on top of the site.\r\n  openFullscreenImage(imagePath: string): void {\r\n    this.setState({ currentFullscreenImage: imagePath });\r\n  }\r\n\r\n  // This function makes it possible to create a section of HTML code that is reusable and uses the category parameter to change content.\r\n  getImagesFromCategory(category: string): JSX.Element[] {\r\n    let result: JSX.Element[] = [];\r\n    let images: JSX.Element[] = [];\r\n\r\n    // Loop through loaded data and match the input category name and the \r\n    for (let categoryData of this.props.siteData.portfolioCategories) {\r\n      if (category === categoryData.name) {\r\n        // Loop through the images that are in the matched category to create and add them to the images list.\r\n        for (let image of categoryData.images) {\r\n          let path = `images/${categoryData.name}/${image}`;\r\n\r\n          // Create an image element using using the information from the data and bind a click event to it.\r\n          images.push(\r\n            <Image key={path} src={path} alt={`portfolio image for: ${path}`} className='portfolio-image' fluid={true} draggable={false} onClick={() => this.openFullscreenImage(path)} />\r\n          );\r\n        }\r\n\r\n        result.push(<div key='selector' className='portfolio-selector'  onClick={() => {\r\n          let element = document.getElementById(`portfolio-content-${categoryData.name}`);\r\n\r\n          if (categoryData.visible && element) element.style.display = 'none';\r\n          else if (element) element.style.display = 'flex'; \r\n          categoryData.visible = !categoryData.visible\r\n\r\n          this.forceUpdate();\r\n        }}>\r\n          <h2>{categoryData.title}</h2>\r\n          <div>\r\n            {categoryData.visible ? '▲' : '▼'}\r\n          </div>\r\n        </div>);\r\n\r\n        // Wrap the images in a container element and add it to the result.\r\n        result.push(<div key='images' id={`portfolio-content-${categoryData.name}`} className='portfolio-content' style={{ display: 'none' }}>{images}</div >);\r\n      }\r\n    }\r\n    \r\n    return result;\r\n  }\r\n\r\n  // Rendering is done in HTML and returns what this class what actually look like on the screen.\r\n  render(): JSX.Element {\r\n    let portfolioElements = [];\r\n\r\n    for (let categoryData of this.props.siteData.portfolioCategories) {\r\n      portfolioElements.push(\r\n        <div key={categoryData.name} id={`portfolio-${categoryData.name}`} className='portfolio-container'>\r\n          {this.getImagesFromCategory(categoryData.name)}\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div id='portfolio' className='unselectable'>\r\n        <h1 className='unselectable'>{this.props.siteData.siteStructure.portfolioTitle}</h1>\r\n        {portfolioElements}\r\n        <FullscreenImage parent={this} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport Markdown from 'markdown-to-jsx';\r\n\r\n\r\n// The data that the Portfolio class manages.\r\ninterface WorkExperienceProps {\r\n  siteData: ISiteData;\r\n}\r\ninterface WorkExperienceState {\r\n  visible: boolean;\r\n  content: string;\r\n}\r\n\r\n// Rendering is done in HTML and returns what this class what actually look like on the screen.\r\nexport default class WorkExperience extends Component<WorkExperienceProps, WorkExperienceState> {\r\n  // This function runs when the class is created.\r\n  constructor(props: WorkExperienceProps) {\r\n    super(props);\r\n\r\n    // Set default data.\r\n    this.state = {\r\n      visible: false,\r\n      content: ''\r\n    };\r\n  }\r\n\r\n  // This function runs when the class is added to the screen.\r\n  componentDidMount(): void {\r\n    // Define a function that loads content out of a file and returns the text.\r\n    let loadFile = async (file: string) => {\r\n      let response = await fetch(`/${file.trim()}`);\r\n      \r\n      return response.text();\r\n    }\r\n\r\n    // Load the file and set the content variable to contain that data.\r\n    loadFile(this.props.siteData.siteInformation.workExperienceFile).then(data => {\r\n      this.setState({ content: data });\r\n    });\r\n  }\r\n\r\n  toggleWorkExperience(): void {\r\n    // Toggle visibility of the work experience content.\r\n    this.setState({ visible: !this.state.visible }, () => {\r\n      let workExperienceContent = document.getElementById('work-experience-content');\r\n\r\n      if (workExperienceContent && this.state.visible)\r\n      {\r\n        workExperienceContent.style.display = 'block';\r\n      }\r\n      else if (workExperienceContent)\r\n      {\r\n        workExperienceContent.style.display = 'none';\r\n      }\r\n    });\r\n  }\r\n\r\n  // Rendering is done in HTML and returns what this class what actually look like on the screen.\r\n  render(): JSX.Element {\r\n    return (\r\n      <div id='work-experience' className={this.state.visible ? 'work-experience-opened' : ''}>\r\n        <div id='work-experience-toggle' className='unselectable' onClick={() => this.toggleWorkExperience()}>\r\n          <h1>{this.props.siteData.siteStructure.workExperienceTitle}</h1>\r\n          <div>{this.state.visible ? '▲' : '▼'}</div>\r\n        </div>\r\n        <div id='work-experience-content' style={{ display: 'none' }}>\r\n          <Markdown>{this.state.content}</Markdown>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport { AboutMe, Contact, Footer, Header, NavigationBar, Portfolio, WorkExperience } from './components'\r\n\r\n// Import the contents of the css files.\r\nimport 'semantic-ui-css/semantic.min.css'\r\nimport './css';\r\n\r\n\r\n// The data that the Index class manages.\r\ninterface IndexProps {}\r\ninterface IndexState {\r\n  siteRawData: string;\r\n  siteData: ISiteData;\r\n}\r\n\r\nvar siteData: string = `\r\n{\r\n  \"siteInformation\":\r\n  {\r\n    \"headerName\": \"PAOLO SIAT\",\r\n    \"headerBackground\": \"villain.png\",\r\n    \"headerBackgroundHovered\": \"villainx.png\",\r\n    \"headerJobTitle\": \"Graphic Designer\",\r\n    \"copyrightMessage\": \"© 2020 Paolo Siat. All rights reserved\",\r\n    \"contactJobTitle\": \"Graphic Designer\",\r\n    \"contactFullName\": \"John Paolo Siat\",\r\n    \"contactPhone\": \"(+64)29 126 9475\",\r\n    \"contactEmail\": \"paolosiat@gmail.com\",\r\n    \"socialInstagramLink\": \"https://www.instagram.com/billygreatestwarriorever/\",\r\n    \"socialYoutubeLink\": \"https://www.youtube.com/channel/UCWuBcvSc01LjIofiTb97I2g\",\r\n    \"aboutMeTextFile\": \"aboutMe.txt\",\r\n    \"workExperienceFile\": \"work-experience.md\"\r\n  },\r\n  \"siteStructure\":\r\n  {\r\n    \"aboutMeTitle\": \"ABOUT ME\",\r\n    \"portfolioTitle\": \"PORTFOLIO\",\r\n    \"workExperienceTitle\": \"WORK EXPERIENCE\",\r\n    \"contactInformationTitle\": \"CONTACT INFORMATION\",\r\n    \"contactFormTitle\": \"SEND ME A MESSAGE!\",\r\n    \"navigationAboutMeTitle\": \"ABOUT ME\",\r\n    \"navigationPortfolioTitle\": \"PORTFOLIO\",\r\n    \"navigationWorkExperienceTitle\": \"WORK EXPERIENCE\",\r\n    \"navigationContactTitle\": \"CONTACT\",\r\n    \"backToTopText\": \"Back to Top\",\r\n    \"contactFormSubmitText\": \"Send\"\r\n  },\r\n  \"portfolioCategories\": [\r\n    {\r\n      \"name\": \"graphic-design\",\r\n      \"title\": \"GRAPHIC DESIGN\",\r\n      \"visible\": false,\r\n      \"images\": [\r\n        \"1.png\",\r\n        \"2.png\",\r\n        \"3.png\",\r\n        \"4.png\",\r\n        \"5.png\",\r\n        \"6.png\",\r\n        \"7.jpg\",\r\n        \"8.jpg\",\r\n        \"9.jpg\",\r\n        \"10.jpg\",\r\n        \"11.jpg\",\r\n        \"12.jpg\",\r\n        \"13.jpg\",\r\n        \"14.jpg\",\r\n        \"15.jpg\",\r\n        \"16.jpg\",\r\n        \"17.png\",\r\n        \"18.jpg\",\r\n        \"20.jpg\",\r\n        \"21.jpg\",\r\n        \"22.jpg\",\r\n        \"23.jpg\",\r\n        \"24.jpg\",\r\n        \"25.jpg\",\r\n        \"26.jpg\",\r\n        \"27.jpg\",\r\n        \"28.jpg\",\r\n        \"29.jpg\",\r\n        \"30.jpg\",\r\n        \"31.jpg\",\r\n        \"32.jpg\",\r\n        \"33.jpg\",\r\n        \"34.jpg\",\r\n        \"35.jpg\",\r\n        \"36.jpg\",\r\n        \"37.jpg\",\r\n        \"38.jpg\",\r\n        \"39.jpg\",\r\n        \"40.jpg\",\r\n        \"41.jpg\",\r\n        \"42.jpg\",\r\n        \"43.jpg\",\r\n        \"44.JPG\",\r\n        \"45.jpg\",\r\n        \"46.jpg\",\r\n        \"47.jpg\",\r\n        \"48.jpg\",\r\n        \"49.jpg\",\r\n        \"50.jpg\",\r\n        \"51.jpg\",\r\n        \"52.jpg\",\r\n        \"53.jpg\"\r\n      ]\r\n    },\r\n    {\r\n      \"name\": \"illustrations\",\r\n      \"title\": \"ILLUSTRATIONS\",\r\n      \"visible\": false,\r\n      \"images\": [\r\n        \"1.jpg\",\r\n        \"2.jpg\",\r\n        \"3.jpg\",\r\n        \"4.jpg\",\r\n        \"5.jpg\",\r\n        \"6.jpg\",\r\n        \"7.jpg\",\r\n        \"8.jpg\",\r\n        \"9.jpg\",\r\n        \"10.jpg\",\r\n        \"11.jpg\",\r\n        \"12.jpg\",\r\n        \"13.jpg\",\r\n        \"14.jpg\",\r\n        \"15.jpg\",\r\n        \"16.jpg\",\r\n        \"17.jpg\",\r\n        \"18.jpg\",\r\n        \"20.jpg\",\r\n        \"21.jpg\"\r\n      ]\r\n    },\r\n    {\r\n      \"name\": \"traditional\",\r\n      \"title\": \"TRADITIONAL\",\r\n      \"visible\": false,\r\n      \"images\": [\r\n        \"1.jpg\",\r\n        \"2.jpg\",\r\n        \"3.jpg\",\r\n        \"4.jpg\",\r\n        \"5.jpg\",\r\n        \"6.jpg\"\r\n      ]\r\n    },\r\n    {\r\n      \"name\": \"others\",\r\n      \"title\": \"OTHERS\",\r\n      \"visible\": false,\r\n      \"images\": [\r\n        \"1.jpg\",\r\n        \"2.jpg\",\r\n        \"3.jpg\"\r\n      ]\r\n    }\r\n  ]\r\n}`;\r\n\r\nfetch('site-data.json')\r\n.then(data => data.text())\r\n.then(text => {\r\n  siteData = text;\r\n\r\n  // Whatever gets rendered here gets rendered on the screen.\r\n  ReactDOM.render(\r\n    <Router basename={process.env.PUBLIC_URL}>\r\n      <NavigationBar siteData={JSON.parse(siteData)} />\r\n      <div id='content'>\r\n        <Header siteData={JSON.parse(siteData)} />\r\n        <AboutMe siteData={JSON.parse(siteData)} />\r\n        <Portfolio siteData={JSON.parse(siteData)} />\r\n        <WorkExperience siteData={JSON.parse(siteData)} />\r\n        <Contact siteData={JSON.parse(siteData)} />\r\n        <Footer siteData={JSON.parse(siteData)} />\r\n      </div>\r\n    </Router>,\r\n    document.getElementById('root')\r\n  );\r\n});\r\n\r\n// Rendering is done in HTML and returns what this class what actually look like on the screen.\r\nexport default class Index extends Component<IndexProps, IndexState> {\r\n  constructor (props: IndexProps) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      siteRawData: '',\r\n      siteData: JSON.parse(siteData)\r\n    }\r\n\r\n    // Grab the text content of the file and parse it in to a class variable.\r\n    fetch('site-data.json')\r\n    .then(data => data.text())\r\n    .then(text => {\r\n      this.setState({ siteRawData: text, siteData: JSON.parse(text) });\r\n    });\r\n  }\r\n\r\n  componentDidMount(): void {this.forceUpdate()}\r\n\r\n  render(): JSX.Element {\r\n    return (\r\n      <div>\r\n        <NavigationBar siteData={this.state.siteData} />\r\n        <div id='content'>\r\n          <Header siteData={this.state.siteData} />\r\n          <AboutMe siteData={this.state.siteData} />\r\n          <Portfolio siteData={this.state.siteData} />\r\n          <WorkExperience siteData={this.state.siteData} />\r\n          <Contact siteData={this.state.siteData} />\r\n          <Footer siteData={this.state.siteData} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n"],"sourceRoot":""}